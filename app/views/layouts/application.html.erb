<!DOCTYPE html>
<html>
  <head>
    <title>BathroomFinder</title>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= javascript_include_tag 'https://maps.googleapis.com/maps/api/js?key='+ Rails.application.credentials.google_maps_api_key %>  
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>  
<script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script>
<script src='//underscorejs.org/underscore-min.js' type='text/javascript'></script> 
 <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css">
    <!-- Bootstrap core CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet">
    <!-- Material Design Bootstrap -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.10/css/mdb.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Tangerine">
        <!-- JQuery -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <!-- Bootstrap tooltips -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.4/umd/popper.min.js"></script>
    <!-- Bootstrap core JavaScript -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <!-- MDB core JavaScript -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.10/js/mdb.js"></script>
    <link href='https://fonts.googleapis.com/css?family=Dancing+Script' rel='stylesheet' type='text/css'>
    <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
    <%= javascript_tag "var obj ="  "#{@bathrooms.to_json}" %>
  </head>

  <body>
    <%= yield %>
    
        <script>

function init(){
 if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
        
          document.getElementById("x-coord").value = position.coords.latitude
          document.getElementById("y-coord").value = position.coords.longitude
  let map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: position.coords.latitude, lng: position.coords.longitude},
          zoom: 21
        }),
  tileListener = google.maps.event.addListener(map,'tilesloaded',fixMyPageOnce);
    let bathroommapper = new Map();
  function fixMyPageOnce(){
   let output = document.getElementsByTagName("td")
   let bathroomlocations = []
    let xcoords = []
    let ycoords = []

        console.log(bathroomlocations)
  for(let i = 0; i < output.length; i++){

  if(i%2 == 0){
    xcoords.push(output[i].innerText)

}
else {
   ycoords.push(output[i].innerText)
}


  }
  function createCustomObj(fields, xcoords, ycoords){
var obj={};
	ycoords.forEach( function(f, i){
		obj[f]={};
    obj[f]['lng']= xcoords[i];
    obj[f]['lat']= ycoords[i];
});

return obj;

};
let fields = ['first place', 'second place', 'third place']
console.log(createCustomObj(fields, xcoords, ycoords));
  //immediately remove the listener (or this thing fires for every tile that gets loaded, which is a lot when you start to pan)
  google.maps.event.removeListener(tileListener);
}

          var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  

        // Add some markers to the map.
        // Note: The code uses the JavaScript Array.prototype.map() method to
        // create an array of markers based on a given "locations" array.
        // The map() method here has nothing to do with the Google Maps API.
      
        var markers = locations.map(function(location, i) {
          return new google.maps.Marker({
            position: location,
            label: labels[i % labels.length]
          });
        });
  
        // Add a marker clusterer to manage the markers.
        var markerCluster = new MarkerClusterer(map, markers,
            {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'})
      
    
         infoWindow = new google.maps.InfoWindow;
            infoWindow.setPosition(pos);
            infoWindow.setContent("YOU ARE HERE");
            infoWindow.open(map);
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          // Browser doesn't support Geolocation
          handleLocationError(false, infoWindow, map.getCenter());
        }
      }
init()
let locations = obj.map(item => ({lat: item.xcoord, lng: item.ycoord}))
console.log(locations)

</script>
  </body>
</html>
